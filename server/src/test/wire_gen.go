// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package test

import (
	application2 "app1/src/app/application"
	"app1/src/auth"
	"app1/src/auth/infrastructure"
	"app1/src/auth/interfaces"
	"app1/src/db/application"
	infrastructure2 "app1/src/db/infrastructure"
	"app1/src/exercises"
	infrastructure3 "app1/src/exercises/infrastructure"
	interfaces2 "app1/src/exercises/interfaces"
	"app1/src/http"
	interfaces3 "app1/src/http/interfaces"
	"app1/src/words"
	infrastructure4 "app1/src/words/infrastructure"
	interfaces4 "app1/src/words/interfaces"
)

// Injectors from wire.go:

func InitializeDependencyInjection() (*AppForTest, error) {
	oAuthAdapter := infrastructure.ProvideOAuthAdapter()
	connManager := infrastructure2.ProvideConnManager()
	userAdapter := infrastructure.ProvideUserAdapter(connManager)
	oAuthController := interfaces.ProvideOAuthController(oAuthAdapter, userAdapter)
	apiKeyAdapter := infrastructure.ProvideAPIKeyAdapter(connManager)
	apiKeyController := interfaces.ProvideAPIKeyController(apiKeyAdapter, oAuthAdapter)
	routes := auth.ProvideRoutes(oAuthController, apiKeyController)
	exerciseAdapter := infrastructure3.ProvideExerciseAdapter(connManager)
	authService := infrastructure.ProvideAuthService(apiKeyAdapter)
	controller := interfaces2.ProvideExercisesController(exerciseAdapter, authService)
	authMiddleware := interfaces3.ProvideAuthMiddleware(authService)
	exercisesRoutes := exercises.ProvideExercisesRoutes(controller, authMiddleware)
	wordAdapter := infrastructure4.ProvideMySQLWordAdapter(connManager)
	interfacesController := interfaces4.ProvideWordController(wordAdapter)
	wordsRoutes := words.ProvideRoutes(interfacesController, authMiddleware)
	v := http.ProvideAllControllers(routes, exercisesRoutes, wordsRoutes)
	mySQLMigration := application.ProvideMysqlMigrate(connManager)
	app := application2.NewApp(v, mySQLMigration)
	dbInitializer := ProviderDBInitializer(apiKeyAdapter, userAdapter)
	appForTest := ProviderAppForTest(app, dbInitializer)
	return appForTest, nil
}
